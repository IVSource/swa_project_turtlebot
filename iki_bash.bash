#/bin/bash

#Will be printed in terminal to signal that you are inside container
export IKI_GIT_LOGO="ðŸ¤– IKI_ROS2 |"

export DOCKER_IMAGE="fbe-dockerreg.rwu.de/doz-iki/staehle-vls/amr-tb3:latest"

# The line below only works in the RWU network, hence it's commented out.
# Image is locally available and shouldn't be changing too often.
# now I'm good to go with the inclusion into .bashrc
#!/bin/bash
ssid=$(iwgetid -r)
echo "Connected to WiFi network: $ssid"
if [ "$ssid" = "RWU" ]; then
    echo "Getting IKI_ROS2 image from RWU Docker registry"
    docker pull $DOCKER_IMAGE
fi

#enable gui in docker
xhost local:root

#Set ROS env
export ROS_DOMAIN_ID=42
export ROS_LOCALHOST_ONLY=1

# Create folder for volume mount
export IKI_GIT=${HOME}/iki_workspace
export ROS_WS=/root

export TURTLEBOT3_MODEL=burger

# Check if the directory exists
if [ -d "$IKI_GIT" ]; then
    echo ""
else
    # Create the directory
    mkdir -p "$IKI_GIT"
    echo "Directory $IKI_GIT has been created."
fi


iki_fix_workspace_permissions(){
    docker run --rm -it \
    --privileged \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    -e DISPLAY \
    -e ROS_DOMAIN_ID \
    -e ROS_LOCALHOST_ONLY \
    -e TURTLEBOT3_MODEL\
    --net=host \
    --ipc=host \
    -v ${IKI_GIT}:${ROS_WS} \
    $DOCKER_IMAGE \
    bash -c \
        "chown -R $UID ${ROS_WS}"
}

# Start docker containing running ROS image
# Start docker containing running ROS image
iki_ros(){
    docker run --rm -it \
    --privileged \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    -e DISPLAY \
    -e ROS_DOMAIN_ID \
    -e TURTLEBOT3_MODEL\
    -e ROS_LOCALHOST_ONLY \
    --net=host \
    --ipc=host \
    -v ${IKI_GIT}:${ROS_WS} \
    $DOCKER_IMAGE \
    bash -c \
	"echo 'source /etc/bash.bashrc' > /root/.bashrc && \
	echo 'PS1=\"${IKI_GIT_LOGO} \[\033[1;36m\]\h \[\033[1;34m\]\W\[\033[0;35m\] \[\033[1;36m\]# \[\033[0m\]\"' >> /root/.bashrc &&\
        echo '#GENERATED!!!!! DO NOT EDIT THIS FILE!!!!!x' >> /root/.bashrc &&\
	chown -R $UID ${ROS_WS} &&\
	cd ${ROS_WS} &&\
	echo 'if [ -f \"${ROS_WS}/.my_bashrc\" ]; then
    		source ${ROS_WS}/.my_bashrc
    else
            echo \"No .my_bashrc found. If you want this warning to go away create an empty file .my_bashrc in your iki_workspace \"
	fi' >> /root/.bashrc &&\
        bash"

}



#--user $UID:1000 \
clear
echo "Ikimashou iki_ros!!! Ganbatte kudasai!!!"
